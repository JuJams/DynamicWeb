{"ast":null,"code":"var _jsxFileName = \"/Users/sanjuchowdary/Desktop/DynamicWeb/Week3/InClass/comp-lib/src/components/Button.js\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types'; // ES6\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = props => {\n  const {\n    children,\n    primary,\n    secondary,\n    success,\n    warning,\n    danger\n  } = props;\n  const baseClass = \"flex items-center px-8 py-3 border\";\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: cx(baseClass, {\n      // color variants pick one\n      \"bg-blue-500 border-blue-500 text-white\": primary,\n      \"bg-gray-900 border-gray-900 text-white\": secondary,\n      \"bg-green-500 border-green-500 text-white\": success,\n      \"bg-yellow-400 border-yellow-400 text-white\": warning,\n      \"bg-red-500 border-red-500 text-white\": danger\n      // outline and rounded additional style props\n    }),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n};\n\n// Attach the custom validation to a real prop so it actually runs\n_c = Button;\nconst oneVariantOnly = props => {\n  const {\n    primary,\n    secondary,\n    success,\n    warning,\n    danger\n  } = props;\n  const count = Number(!!primary) + Number(!!secondary) + Number(!!success) + Number(!!warning) + Number(!!danger);\n  console.log('variant count:', count);\n  if (count > 1) {\n    return new Error('Only one of primary, secondary, success, warning, danger can be TRUE!');\n  }\n  return null;\n};\nButton.propTypes = {\n  primary: (props, propName, componentName) => oneVariantOnly(props),\n  secondary: PropTypes.bool,\n  success: PropTypes.bool,\n  warning: PropTypes.bool,\n  danger: PropTypes.bool\n};\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["cx","PropTypes","jsxDEV","_jsxDEV","Button","props","children","primary","secondary","success","warning","danger","baseClass","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","oneVariantOnly","count","Number","console","log","Error","propTypes","propName","componentName","bool","$RefreshReg$"],"sources":["/Users/sanjuchowdary/Desktop/DynamicWeb/Week3/InClass/comp-lib/src/components/Button.js"],"sourcesContent":["import cx from 'classnames'\nimport PropTypes from 'prop-types' // ES6\n\n\nconst Button = (props) => {\n    const { children, primary, secondary, success, warning, danger } = props;\n    const baseClass = \"flex items-center px-8 py-3 border\"\n    return <button className = {cx(baseClass, {\n        // color variants pick one\n        \"bg-blue-500 border-blue-500 text-white\": primary,\n        \"bg-gray-900 border-gray-900 text-white\": secondary,\n        \"bg-green-500 border-green-500 text-white\": success,\n        \"bg-yellow-400 border-yellow-400 text-white\": warning,\n        \"bg-red-500 border-red-500 text-white\": danger,\n        // outline and rounded additional style props\n        \n    })}>{children}</button>\n}\n\n// Attach the custom validation to a real prop so it actually runs\nconst oneVariantOnly = (props) => {\n    const {primary,secondary,success,warning,danger} = props\n    const count =\n        Number(!!primary) +\n        Number(!!secondary) +\n        Number(!!success) +\n        Number(!!warning) +\n        Number(!!danger)\n\n    console.log('variant count:', count)\n    if (count > 1) {\n        return new Error('Only one of primary, secondary, success, warning, danger can be TRUE!')\n    }\n    return null\n}\n\nButton.propTypes = {\n    primary: (props, propName, componentName) => oneVariantOnly(props),\n    secondary: PropTypes.bool,\n    success: PropTypes.bool,\n    warning: PropTypes.bool,\n    danger: PropTypes.bool,\n}\n\nexport default Button"],"mappings":";AAAA,OAAOA,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY,EAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnC,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACtB,MAAM;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,SAAS;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAGN,KAAK;EACxE,MAAMO,SAAS,GAAG,oCAAoC;EACtD,oBAAOT,OAAA;IAAQU,SAAS,EAAIb,EAAE,CAACY,SAAS,EAAE;MACtC;MACA,wCAAwC,EAAEL,OAAO;MACjD,wCAAwC,EAAEC,SAAS;MACnD,0CAA0C,EAAEC,OAAO;MACnD,4CAA4C,EAAEC,OAAO;MACrD,sCAAsC,EAAEC;MACxC;IAEJ,CAAC,CAAE;IAAAL,QAAA,EAAEA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAC3B,CAAC;;AAED;AAAAC,EAAA,GAfMd,MAAM;AAgBZ,MAAMe,cAAc,GAAId,KAAK,IAAK;EAC9B,MAAM;IAACE,OAAO;IAACC,SAAS;IAACC,OAAO;IAACC,OAAO;IAACC;EAAM,CAAC,GAAGN,KAAK;EACxD,MAAMe,KAAK,GACPC,MAAM,CAAC,CAAC,CAACd,OAAO,CAAC,GACjBc,MAAM,CAAC,CAAC,CAACb,SAAS,CAAC,GACnBa,MAAM,CAAC,CAAC,CAACZ,OAAO,CAAC,GACjBY,MAAM,CAAC,CAAC,CAACX,OAAO,CAAC,GACjBW,MAAM,CAAC,CAAC,CAACV,MAAM,CAAC;EAEpBW,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,KAAK,CAAC;EACpC,IAAIA,KAAK,GAAG,CAAC,EAAE;IACX,OAAO,IAAII,KAAK,CAAC,uEAAuE,CAAC;EAC7F;EACA,OAAO,IAAI;AACf,CAAC;AAEDpB,MAAM,CAACqB,SAAS,GAAG;EACflB,OAAO,EAAEA,CAACF,KAAK,EAAEqB,QAAQ,EAAEC,aAAa,KAAKR,cAAc,CAACd,KAAK,CAAC;EAClEG,SAAS,EAAEP,SAAS,CAAC2B,IAAI;EACzBnB,OAAO,EAAER,SAAS,CAAC2B,IAAI;EACvBlB,OAAO,EAAET,SAAS,CAAC2B,IAAI;EACvBjB,MAAM,EAAEV,SAAS,CAAC2B;AACtB,CAAC;AAED,eAAexB,MAAM;AAAA,IAAAc,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}