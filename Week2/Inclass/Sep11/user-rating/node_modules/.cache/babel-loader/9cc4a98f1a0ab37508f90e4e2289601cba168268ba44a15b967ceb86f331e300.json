{"ast":null,"code":"var _jsxFileName = \"/Users/sanjuchowdary/Desktop/DynamicWeb/Sep11/user-rating/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n// you may come across the use of useState() in the wild\n// State is a object that keeps track of variables that will update\n// based on user input. When state changes, the component NOT the page\n// update + refresh and re-render and the changes are reflected on the screen\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  // when we call useState, we need to name our piece state, and the function to update it,\n  // and delcare an initial value for that state\n  /*\n    state = {\n    count: 0,\n  }\n  the function to update counts value\n  setCount(1)\n  */\n  const [count, setCount] = useState(0);\n\n  /* NEVER EVER EVER EVER DIRECTLY MUTATE STATE\n    NO DONT DO THIS\n    count = count-1\n    USE YOUR SETTER\n    */\n  const handlePlusClick = () => {\n    setCount(count + 1);\n  };\n  const handleMinusClick = () => {\n    if (count <= 0) {\n      return;\n    }\n    setCount(count - 1);\n  };\n\n  // this is where we return JSX\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counter: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMinusClick(3),\n      children: \"[-]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlusClick,\n      children: \"[+]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Counter","_s","count","setCount","handlePlusClick","handleMinusClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sanjuchowdary/Desktop/DynamicWeb/Sep11/user-rating/src/components/Counter.js"],"sourcesContent":["import {useState} from 'react'\n// you may come across the use of useState() in the wild\n// State is a object that keeps track of variables that will update\n// based on user input. When state changes, the component NOT the page\n// update + refresh and re-render and the changes are reflected on the screen\n\nconst Counter = () => {\n  // when we call useState, we need to name our piece state, and the function to update it,\n  // and delcare an initial value for that state\n  /*\n    state = {\n    count: 0,\n  }\n  the function to update counts value\n  setCount(1)\n  */\n  const [count, setCount] = useState(0)\n\n  /* NEVER EVER EVER EVER DIRECTLY MUTATE STATE\n    NO DONT DO THIS\n    count = count-1\n    USE YOUR SETTER\n    */\n  const handlePlusClick = () => {\n    setCount(count + 1)\n  }\n\n  const handleMinusClick = () => {\n    if (count <= 0) {\n      return\n    }\n    setCount(count - 1)\n  }\n\n  // this is where we return JSX\n  return (\n    <div>\n      <h1>Counter: {count}</h1>\n      <button onClick={handleMinusClick(3)}>[-]</button>\n\n      <button onClick={handlePlusClick}>[+]</button>\n    </div>\n  )\n}\n\nexport default Counter\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB;EACA;EACA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;;EAErC;AACF;AACA;AACA;AACA;EACE,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC5BD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIH,KAAK,IAAI,CAAC,EAAE;MACd;IACF;IACAC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;;EAED;EACA,oBACEH,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,GAAI,WAAS,EAACJ,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBX,OAAA;MAAQY,OAAO,EAAEN,gBAAgB,CAAC,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAElDX,OAAA;MAAQY,OAAO,EAAEP,eAAgB;MAAAE,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAAT,EAAA,CArCKD,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAuCb,eAAeA,OAAO;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}