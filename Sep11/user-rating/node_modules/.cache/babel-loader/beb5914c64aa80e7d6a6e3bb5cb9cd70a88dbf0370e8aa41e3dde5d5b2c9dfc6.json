{"ast":null,"code":"var _jsxFileName = \"/Users/sanjuchowdary/Desktop/DynamicWeb/Sep11/user-rating/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n// The use of use states() in the wild while googling\n// State is an object that keeps track of variable that update base don user input.\n// When state changes, the component but not the entire page re-renders.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  // When we call useState, we need to name our piece state and the function\n  // to update it and declare an initial value for that state.\n  const [count, setCount] = useState(0);\n  // useState is a hook that returns an array with two elements: \n  // the current state value and a function to update it.\n  /*\n      state = {}\n  The function to update counts value\n  setCount(1)\n   */\n  const handlePlusClick = () => {\n    // NEVER DIRECTLY MUTATE STATE\n    setCount(count + 1);\n  };\n  const handleMinusClick = () => {\n    if (count <= 0) {\n      return;\n    }\n    setCount(count - 1);\n  };\n\n  // this is where we return the JSX\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Counter: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleMinusClick,\n      children: \"[-]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlusClick,\n      children: \"[+]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Counter","_s","count","setCount","handlePlusClick","handleMinusClick","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/sanjuchowdary/Desktop/DynamicWeb/Sep11/user-rating/src/components/Counter.js"],"sourcesContent":["import {useState} from 'react';\n// The use of use states() in the wild while googling\n// State is an object that keeps track of variable that update base don user input.\n// When state changes, the component but not the entire page re-renders.\n\nconst Counter = () => {\n    // When we call useState, we need to name our piece state and the function\n    // to update it and declare an initial value for that state.\n    const [count, setCount] = useState(0) \n    // useState is a hook that returns an array with two elements: \n    // the current state value and a function to update it.\n    /*\n        state = {}\n    The function to update counts value\n    setCount(1)\n     */\n    const handlePlusClick = () => {\n        // NEVER DIRECTLY MUTATE STATE\n        setCount(count + 1)\n    }\n    const handleMinusClick = () => {\n        if (count <= 0){\n            return\n        }\n        setCount(count - 1)\n    }\n\n    // this is where we return the JSX\n    return (\n        <div>\n            <h1>Counter: {count}</h1>\n            <button onClick = {handleMinusClick}>[-]</button>\n            <button onClick = {handlePlusClick}>[+]</button>\n        </div>\n    )\n}\n\nexport default Counter"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC;EACA;EACA;AACJ;AACA;AACA;AACA;EACI,MAAMO,eAAe,GAAGA,CAAA,KAAM;IAC1B;IACAD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB,CAAC;EACD,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIH,KAAK,IAAI,CAAC,EAAC;MACX;IACJ;IACAC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB,CAAC;;EAED;EACA,oBACIH,OAAA;IAAAO,QAAA,gBACIP,OAAA;MAAAO,QAAA,GAAI,WAAS,EAACJ,KAAK;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBX,OAAA;MAAQY,OAAO,EAAIN,gBAAiB;MAAAC,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDX,OAAA;MAAQY,OAAO,EAAIP,eAAgB;MAAAE,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd,CAAC;AAAAT,EAAA,CA9BKD,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAgCb,eAAeA,OAAO;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}